2025-07-16 00:01:53 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=u00rjstq] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:01:53 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session u00rjstq
2025-07-16 00:01:53 [http-nio-8080-exec-9] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:01:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:01:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:01:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:01:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:01:55 [http-nio-8080-exec-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:01:55 [http-nio-8080-exec-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:01:55 [clientInboundChannel-241] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=u00rjstq
2025-07-16 00:01:55 [clientOutboundChannel-27] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@4252e301, simpSessionId=u00rjstq}], simpUser=com.btalk.security.StompPrincipal@4252e301, simpSessionId=u00rjstq}]
2025-07-16 00:01:59 [MessageBroker-1] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [u00rjstq]
2025-07-16 00:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:02:08 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752600728424", parameters={masked}
2025-07-16 00:02:08 [http-nio-8080-exec-3] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@58d8059b
2025-07-16 00:02:08 [http-nio-8080-exec-3] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752600728424
2025-07-16 00:02:08 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:02:08 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/090/x3weisqc/websocket", parameters={}
2025-07-16 00:02:08 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@58d8059b
2025-07-16 00:02:08 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/090/x3weisqc/websocket
2025-07-16 00:02:08 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:02:08 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=x3weisqc]
2025-07-16 00:02:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:02:08 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:02:08 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:02:08 [http-nio-8080-exec-4] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:02:08 [http-nio-8080-exec-4] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:02:08 [clientInboundChannel-244] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=x3weisqc
2025-07-16 00:02:08 [clientOutboundChannel-28] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:02:08 [clientOutboundChannel-28] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:02:08 [clientInboundChannel-248] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userx3weisqc subscriptionId=sub-0 session=x3weisqc user=3 payload=byte[0]
2025-07-16 00:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:02:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:02:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:02:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:02:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:02:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:02:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:02:09 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:02:09 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:02:09 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:02:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:02:09 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:02:09 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:02:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:02:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:02:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:02:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:02:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:02:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:02:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:02:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:02:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:02:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:02:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:02:11 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:02:11 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:02:11 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:04:55 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=x3weisqc] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:04:55 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session x3weisqc
2025-07-16 00:04:55 [http-nio-8080-exec-5] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:04:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:04:55 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752600895794", parameters={masked}
2025-07-16 00:04:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@58d8059b
2025-07-16 00:04:55 [http-nio-8080-exec-10] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752600895794
2025-07-16 00:04:55 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:04:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/776/4zs4xusz/websocket", parameters={}
2025-07-16 00:04:55 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@58d8059b
2025-07-16 00:04:55 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/776/4zs4xusz/websocket
2025-07-16 00:04:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:04:55 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=4zs4xusz]
2025-07-16 00:04:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:04:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:04:55 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:04:55 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:04:55 [http-nio-8080-exec-1] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:04:55 [clientInboundChannel-250] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=4zs4xusz
2025-07-16 00:04:55 [http-nio-8080-exec-1] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:04:55 [clientOutboundChannel-29] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:04:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:04:56 [clientOutboundChannel-29] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:04:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:04:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:04:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:04:56 [clientInboundChannel-254] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-user4zs4xusz subscriptionId=sub-0 session=4zs4xusz user=3 payload=byte[0]
2025-07-16 00:04:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:04:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:04:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:04:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:04:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:04:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:04:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:04:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:04:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:04:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:04:57 [http-nio-8080-exec-5] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:04:57 [http-nio-8080-exec-5] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:04:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:04:57 [clientInboundChannel-256] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=x3weisqc
2025-07-16 00:04:57 [clientOutboundChannel-30] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@2007af25, simpSessionId=x3weisqc}], simpUser=com.btalk.security.StompPrincipal@2007af25, simpSessionId=x3weisqc}]
2025-07-16 00:04:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:04:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:04:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:04:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:04:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:04:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:04:58 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:04:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:04:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:04:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:04:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:04:59 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:04:59 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:04:59 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:05:00 [clientInboundChannel-260] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-user4zs4xusz subscriptionId=sub-1 session=4zs4xusz user=3 payload=byte[0]
2025-07-16 00:05:00 [clientInboundChannel-262] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/67/messages id=sub-2 session=4zs4xusz
2025-07-16 00:05:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/67/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:02 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:02 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 1 containing com.b (truncated)...]
2025-07-16 00:05:02 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:05:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:02 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/67/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:05:02 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:05:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:04 [MessageBroker-9] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [x3weisqc]
2025-07-16 00:05:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:04 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 1 containing com.b (truncated)...]
2025-07-16 00:05:04 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:04 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/67/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:05:04 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:05:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:06 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:06 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 1 containing com.b (truncated)...]
2025-07-16 00:05:06 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:05:09 [clientInboundChannel-265] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-1 session=4zs4xusz
2025-07-16 00:05:09 [clientInboundChannel-268] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-2 session=4zs4xusz
2025-07-16 00:05:09 [clientInboundChannel-272] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-user4zs4xusz subscriptionId=sub-3 session=4zs4xusz user=3 payload=byte[0]
2025-07-16 00:05:09 [clientInboundChannel-274] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-4 session=4zs4xusz
2025-07-16 00:05:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:09 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:05:09 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:05:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:05:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:05:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:05:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:05:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:05:11 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:05:11 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:14 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:14 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:05:14 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:05:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:14 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:05:14 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:05:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:05:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:05:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:05:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:05:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:05:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:05:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:05:18 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:05:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:05:18 [http-nio-8080-exec-10] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [2] in public com.btalk.dto.response.ApiResponse<org.springframework.data.domain.Page<com.btalk.dto.MessageDto>> com.btalk.controller.MessageController.getMessagesBefore(java.lang.Long,java.lang.Long,java.time.LocalDateTime,int,int): Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]
2025-07-16 00:05:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 00:05:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 00:05:18 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]]
2025-07-16 00:05:18 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 00:05:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:20 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:05:20 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:05:20 [http-nio-8080-exec-2] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [2] in public com.btalk.dto.response.ApiResponse<org.springframework.data.domain.Page<com.btalk.dto.MessageDto>> com.btalk.controller.MessageController.getMessagesBefore(java.lang.Long,java.lang.Long,java.time.LocalDateTime,int,int): Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]
2025-07-16 00:05:20 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 00:05:20 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:20 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 00:05:20 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]]
2025-07-16 00:05:20 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 00:05:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:20 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:05:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:05:20 [http-nio-8080-exec-1] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [2] in public com.btalk.dto.response.ApiResponse<org.springframework.data.domain.Page<com.btalk.dto.MessageDto>> com.btalk.controller.MessageController.getMessagesBefore(java.lang.Long,java.lang.Long,java.time.LocalDateTime,int,int): Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]
2025-07-16 00:05:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 00:05:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 00:05:20 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]]
2025-07-16 00:05:20 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 00:05:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:24 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:05:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:05:24 [http-nio-8080-exec-5] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [2] in public com.btalk.dto.response.ApiResponse<org.springframework.data.domain.Page<com.btalk.dto.MessageDto>> com.btalk.controller.MessageController.getMessagesBefore(java.lang.Long,java.lang.Long,java.time.LocalDateTime,int,int): Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]
2025-07-16 00:05:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 00:05:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 00:05:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]]
2025-07-16 00:05:24 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 00:05:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:26 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:05:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:05:26 [http-nio-8080-exec-4] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [2] in public com.btalk.dto.response.ApiResponse<org.springframework.data.domain.Page<com.btalk.dto.MessageDto>> com.btalk.controller.MessageController.getMessagesBefore(java.lang.Long,java.lang.Long,java.time.LocalDateTime,int,int): Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]
2025-07-16 00:05:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 00:05:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 00:05:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]]
2025-07-16 00:05:26 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 00:05:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:05:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:05:26 [http-nio-8080-exec-7] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [2] in public com.btalk.dto.response.ApiResponse<org.springframework.data.domain.Page<com.btalk.dto.MessageDto>> com.btalk.controller.MessageController.getMessagesBefore(java.lang.Long,java.lang.Long,java.time.LocalDateTime,int,int): Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]
2025-07-16 00:05:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 00:05:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 00:05:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]]
2025-07-16 00:05:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 00:05:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:29 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:05:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:05:29 [http-nio-8080-exec-9] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [2] in public com.btalk.dto.response.ApiResponse<org.springframework.data.domain.Page<com.btalk.dto.MessageDto>> com.btalk.controller.MessageController.getMessagesBefore(java.lang.Long,java.lang.Long,java.time.LocalDateTime,int,int): Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]
2025-07-16 00:05:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 00:05:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 00:05:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]]
2025-07-16 00:05:29 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 00:05:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:05:29 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:05:29 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:05:29 [http-nio-8080-exec-8] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [2] in public com.btalk.dto.response.ApiResponse<org.springframework.data.domain.Page<com.btalk.dto.MessageDto>> com.btalk.controller.MessageController.getMessagesBefore(java.lang.Long,java.lang.Long,java.time.LocalDateTime,int,int): Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]
2025-07-16 00:05:29 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 00:05:29 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:05:29 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 00:05:29 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]]
2025-07-16 00:05:29 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 00:06:20 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=4zs4xusz] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:06:20 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session 4zs4xusz
2025-07-16 00:06:20 [http-nio-8080-exec-2] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:06:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:06:21 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752600981022", parameters={masked}
2025-07-16 00:06:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@58d8059b
2025-07-16 00:06:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752600981022
2025-07-16 00:06:21 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:06:21 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/890/xhxvnm0h/websocket", parameters={}
2025-07-16 00:06:21 [http-nio-8080-exec-7] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@58d8059b
2025-07-16 00:06:21 [http-nio-8080-exec-7] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/890/xhxvnm0h/websocket
2025-07-16 00:06:21 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:06:21 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=xhxvnm0h]
2025-07-16 00:06:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:06:21 [http-nio-8080-exec-9] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:06:21 [http-nio-8080-exec-9] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:06:21 [clientInboundChannel-277] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=xhxvnm0h
2025-07-16 00:06:21 [clientOutboundChannel-31] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:06:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:06:21 [clientOutboundChannel-31] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:06:21 [clientInboundChannel-281] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userxhxvnm0h subscriptionId=sub-0 session=xhxvnm0h user=3 payload=byte[0]
2025-07-16 00:06:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:06:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:06:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:06:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:06:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:06:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:06:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:06:22 [http-nio-8080-exec-2] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:06:22 [http-nio-8080-exec-2] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:06:22 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:06:22 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:06:22 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:06:22 [clientInboundChannel-283] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=4zs4xusz
2025-07-16 00:06:22 [clientOutboundChannel-32] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@526a0d7e, simpSessionId=4zs4xusz}], simpUser=com.btalk.security.StompPrincipal@526a0d7e, simpSessionId=4zs4xusz}]
2025-07-16 00:06:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:06:22 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:06:22 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:06:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:06:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:06:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:06:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:06:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:06:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:06:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:06:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:06:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:06:23 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:06:23 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:06:23 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:06:24 [clientInboundChannel-287] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userxhxvnm0h subscriptionId=sub-1 session=xhxvnm0h user=3 payload=byte[0]
2025-07-16 00:06:24 [clientInboundChannel-289] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=xhxvnm0h
2025-07-16 00:06:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:06:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:06:27 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:06:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:06:27 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:06:27 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:06:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:06:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:06:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:06:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:29 [MessageBroker-6] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [4zs4xusz]
2025-07-16 00:06:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:06:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:06:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:06:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:06:30 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:06:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:06:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:06:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:06:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:06:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:06:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:06:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:06:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:06:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:06:36 [MessageBroker-6] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 15, active threads = 0, queued tasks = 0, completed tasks = 327], outboundChannel[pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 32], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 2, completed tasks = 437]
2025-07-16 00:06:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:06:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:06:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:06:44 [http-nio-8080-exec-2] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [2] in public com.btalk.dto.response.ApiResponse<org.springframework.data.domain.Page<com.btalk.dto.MessageDto>> com.btalk.controller.MessageController.getMessagesBefore(java.lang.Long,java.lang.Long,java.time.LocalDateTime,int,int): Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]
2025-07-16 00:06:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 00:06:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:06:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 00:06:44 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T00:03:33.000Z]]
2025-07-16 00:06:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 00:07:55 [RMI TCP Connection(37)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 00:07:55 [RMI TCP Connection(37)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 00:07:55 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 00:07:55 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 00:07:55 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Closing SockJS session xhxvnm0h with CloseStatus[code=1001, reason=null]
2025-07-16 00:07:55 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - Transport error in WebSocketServerSockJsSession[id=xhxvnm0h]
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:778)
	at org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:575)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:324)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 00:07:55 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Failure while sending SockJS close frame
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 00:07:55 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=xhxvnm0h] closed with CloseStatus[code=1001, reason=null]
2025-07-16 00:07:55 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session xhxvnm0h
2025-07-16 00:07:55 [RMI TCP Connection(37)-127.0.0.1] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:07:56 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:07:56 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:07:56 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:07:56 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:07:56 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:07:56 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:07:56 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:07:56 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12333eaf]]
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12333eaf]
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12333eaf]
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 00:07:57 [clientInboundChannel-292] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=xhxvnm0h
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 00:07:57 [RMI TCP Connection(37)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 00:07:59 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 26604 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 00:07:59 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 00:08:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 00:08:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 6 JPA repository interfaces.
2025-07-16 00:08:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 00:08:01 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 00:08:01 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 00:08:01 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 00:08:01 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1546 ms
2025-07-16 00:08:01 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 00:08:01 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 00:08:01 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 00:08:02 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 00:08:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 00:08:03 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1f68e4e8
2025-07-16 00:08:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 00:08:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 00:08:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 00:08:03 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 00:08:04 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 00:08:05 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 00:08:05 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 00:08:06 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 00:08:06 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.AuthController:
	
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ChatController:
	{[MESSAGE],[/chat/{conversationId}/send]}: sendMessage(Long,MessageDto)
	{[MESSAGE],[/chat/{conversationId}/read]}: markMessagesAsRead(Long,Long)
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ConversationController:
	
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.FileUploadController:
	
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.MessageController:
	
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.UserController:
	
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-16 00:08:07 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-16 00:08:07 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 00:08:07 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 00:08:07 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-16 00:08:07 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@65dfce2f]
2025-07-16 00:08:07 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@65dfce2f]
2025-07-16 00:08:07 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@65dfce2f]]
2025-07-16 00:08:07 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-16 00:08:07 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:08:07 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:08:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-16 00:08:07 [main] INFO  com.btalk.BackendApplication - Started BackendApplication in 8.289 seconds (process running for 8.863)
2025-07-16 00:08:15 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 00:08:15 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 00:08:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-16 00:08:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-16 00:08:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-16 00:08:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@41313f58
2025-07-16 00:08:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4a25da63
2025-07-16 00:08:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-16 00:08:15 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-16 00:08:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752601095588", parameters={masked}
2025-07-16 00:08:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:08:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752601095588
2025-07-16 00:08:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:08:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/430/rcawbser/websocket", parameters={}
2025-07-16 00:08:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:08:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/430/rcawbser/websocket
2025-07-16 00:08:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:08:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=rcawbser]
2025-07-16 00:08:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:16 [http-nio-8080-exec-5] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:08:16 [clientInboundChannel-2] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=rcawbser
2025-07-16 00:08:16 [http-nio-8080-exec-5] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:08:16 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:08:16 [clientOutboundChannel-1] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:08:16 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:08:16 [clientOutboundChannel-1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:08:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:08:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:08:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:16 [clientInboundChannel-6] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userrcawbser subscriptionId=sub-0 session=rcawbser user=3 payload=byte[0]
2025-07-16 00:08:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:08:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:08:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:08:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:08:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:08:17 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:08:17 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:08:17 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:08:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:17 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:08:17 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:08:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:08:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:08:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:08:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:08:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:08:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:08:18 [clientInboundChannel-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userrcawbser subscriptionId=sub-1 session=rcawbser user=3 payload=byte[0]
2025-07-16 00:08:18 [clientInboundChannel-11] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=rcawbser
2025-07-16 00:08:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:08:18 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:08:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:08:19 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:08:19 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:08:19 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:08:19 [clientInboundChannel-14] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-1 session=rcawbser
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:08:19 [clientInboundChannel-17] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-2 session=rcawbser
2025-07-16 00:08:19 [clientInboundChannel-21] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userrcawbser subscriptionId=sub-3 session=rcawbser user=3 payload=byte[0]
2025-07-16 00:08:19 [clientInboundChannel-23] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-4 session=rcawbser
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:08:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:08:21 [http-nio-8080-exec-1] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-16 00:08:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:08:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:21 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:08:21 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:08:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:08:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:08:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:08:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:08:24 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:08:24 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:08:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:24 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:08:24 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:08:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:08:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:08:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:08:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:27 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:08:27 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:08:27 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:08:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:27 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:08:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:08:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:08:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:08:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:08:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:29 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:29 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:08:29 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:08:29 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:08:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:31 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:08:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:08:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:08:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:08:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:08:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:08:31 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:08:31 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:08:53 [clientInboundChannel-26] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-3 session=rcawbser
2025-07-16 00:08:53 [clientInboundChannel-1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userrcawbser subscriptionId=sub-5 session=rcawbser user=3 payload=byte[0]
2025-07-16 00:08:53 [clientInboundChannel-1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/67/messages id=sub-6 session=rcawbser
2025-07-16 00:08:53 [clientInboundChannel-29] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-4 session=rcawbser
2025-07-16 00:08:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/67/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:08:53 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:08:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:08:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:08:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:56 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:08:56 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 1 containing com.b (truncated)...]
2025-07-16 00:08:56 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:08:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:56 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/67/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:08:56 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:08:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:08:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:58 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:08:58 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 1 containing com.b (truncated)...]
2025-07-16 00:08:58 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:08:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:08:58 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/67/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:08:58 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:08:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:08:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:08:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:08:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:09:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:09:00 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:09:00 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:09:00 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 1 containing com.b (truncated)...]
2025-07-16 00:09:00 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:09:07 [MessageBroker-4] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 32, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannel[pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 2, completed tasks = 13]
2025-07-16 00:11:19 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=rcawbser] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:11:19 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session rcawbser
2025-07-16 00:11:19 [http-nio-8080-exec-9] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:11:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:11:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:11:20 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752601280218", parameters={masked}
2025-07-16 00:11:20 [http-nio-8080-exec-6] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:11:20 [http-nio-8080-exec-6] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752601280218
2025-07-16 00:11:20 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:11:20 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/177/lapwkxs3/websocket", parameters={}
2025-07-16 00:11:20 [http-nio-8080-exec-4] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:11:20 [http-nio-8080-exec-4] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/177/lapwkxs3/websocket
2025-07-16 00:11:20 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:11:20 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=lapwkxs3]
2025-07-16 00:11:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:11:20 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:11:20 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:11:20 [http-nio-8080-exec-8] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:11:20 [http-nio-8080-exec-8] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:11:20 [clientInboundChannel-34] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=lapwkxs3
2025-07-16 00:11:20 [clientOutboundChannel-2] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:11:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:11:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:11:20 [clientOutboundChannel-2] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:11:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:11:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:11:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:11:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:11:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:11:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:11:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:20 [clientInboundChannel-38] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userlapwkxs3 subscriptionId=sub-0 session=lapwkxs3 user=3 payload=byte[0]
2025-07-16 00:11:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:11:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:11:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:11:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:11:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:11:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:11:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:11:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:11:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:11:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:11:21 [http-nio-8080-exec-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:11:21 [http-nio-8080-exec-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:11:21 [clientInboundChannel-40] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=rcawbser
2025-07-16 00:11:21 [clientOutboundChannel-3] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@5675b93f, simpSessionId=rcawbser}], simpUser=com.btalk.security.StompPrincipal@5675b93f, simpSessionId=rcawbser}]
2025-07-16 00:11:21 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:11:21 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:11:21 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:11:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:11:21 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:11:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:11:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:11:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:11:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:11:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:11:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:11:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:11:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:11:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:11:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:11:23 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:11:23 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:11:23 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:11:24 [clientInboundChannel-44] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userlapwkxs3 subscriptionId=sub-1 session=lapwkxs3 user=3 payload=byte[0]
2025-07-16 00:11:24 [clientInboundChannel-46] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=lapwkxs3
2025-07-16 00:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:11:24 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:11:24 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [MessageBroker-5] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [rcawbser]
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:11:26 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:11:26 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:11:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:11:27 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:11:27 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:11:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:11:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:11:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:11:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:11:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:29 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:11:29 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:11:29 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:11:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:30 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:11:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:31 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:11:31 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:11:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:11:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:11:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:11:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:31 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:11:32 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:11:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:32 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:11:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:11:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:11:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:11:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:12:55 [http-nio-8080-exec-6] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=lapwkxs3] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:12:55 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session lapwkxs3
2025-07-16 00:12:55 [http-nio-8080-exec-6] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:12:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:12:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:12:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:12:55 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752601375815", parameters={masked}
2025-07-16 00:12:55 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:12:55 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752601375815
2025-07-16 00:12:55 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:12:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/408/ufsnvl35/websocket", parameters={}
2025-07-16 00:12:55 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:12:55 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/408/ufsnvl35/websocket
2025-07-16 00:12:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:12:55 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=ufsnvl35]
2025-07-16 00:12:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:12:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:12:55 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:12:55 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:12:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:12:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:12:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:12:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:12:56 [http-nio-8080-exec-10] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:12:56 [http-nio-8080-exec-10] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:12:56 [clientInboundChannel-49] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=ufsnvl35
2025-07-16 00:12:56 [clientOutboundChannel-4] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:12:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:12:56 [clientOutboundChannel-4] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:12:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:12:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:12:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:12:56 [clientInboundChannel-53] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userufsnvl35 subscriptionId=sub-0 session=ufsnvl35 user=3 payload=byte[0]
2025-07-16 00:12:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:12:56 [http-nio-8080-exec-6] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:12:56 [http-nio-8080-exec-6] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:12:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:12:56 [clientInboundChannel-55] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=lapwkxs3
2025-07-16 00:12:56 [clientOutboundChannel-5] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@35585b80, simpSessionId=lapwkxs3}], simpUser=com.btalk.security.StompPrincipal@35585b80, simpSessionId=lapwkxs3}]
2025-07-16 00:12:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:12:57 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:12:57 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:12:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:12:57 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:12:57 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:12:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:12:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:12:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:12:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:12:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:12:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:12:57 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:12:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:12:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:12:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:12:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:12:58 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:12:58 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:12:58 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:00 [MessageBroker-12] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [lapwkxs3]
2025-07-16 00:13:00 [clientInboundChannel-59] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userufsnvl35 subscriptionId=sub-1 session=ufsnvl35 user=3 payload=byte[0]
2025-07-16 00:13:00 [clientInboundChannel-61] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=ufsnvl35
2025-07-16 00:13:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:03 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:13:03 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:03 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:13:03 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:13:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:13:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:13:05 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:13:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:05 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:13:05 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:06 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:06 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:13:06 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:06 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:13:06 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:13:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:13:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:13:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:13:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:08 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:13:08 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=ufsnvl35] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:13:18 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session ufsnvl35
2025-07-16 00:13:18 [http-nio-8080-exec-1] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:13:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752601398590", parameters={masked}
2025-07-16 00:13:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:13:18 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752601398590
2025-07-16 00:13:18 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/987/cieqbiyj/websocket", parameters={}
2025-07-16 00:13:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:13:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/987/cieqbiyj/websocket
2025-07-16 00:13:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:13:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=cieqbiyj]
2025-07-16 00:13:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:13:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:13:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:13:18 [http-nio-8080-exec-3] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:13:18 [http-nio-8080-exec-3] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:13:18 [clientInboundChannel-64] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=cieqbiyj
2025-07-16 00:13:18 [clientOutboundChannel-6] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:13:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:13:18 [clientOutboundChannel-6] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:13:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:13:19 [clientInboundChannel-68] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-usercieqbiyj subscriptionId=sub-0 session=cieqbiyj user=3 payload=byte[0]
2025-07-16 00:13:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:13:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:13:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:13:20 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:20 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:13:20 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:20 [http-nio-8080-exec-1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:13:20 [http-nio-8080-exec-1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:13:20 [clientInboundChannel-70] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=ufsnvl35
2025-07-16 00:13:20 [clientOutboundChannel-7] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@786f8690, simpSessionId=ufsnvl35}], simpUser=com.btalk.security.StompPrincipal@786f8690, simpSessionId=ufsnvl35}]
2025-07-16 00:13:20 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:13:20 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:13:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:13:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:13:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:13:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:13:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:13:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:13:21 [clientInboundChannel-74] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-usercieqbiyj subscriptionId=sub-1 session=cieqbiyj user=3 payload=byte[0]
2025-07-16 00:13:21 [clientInboundChannel-76] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=cieqbiyj
2025-07-16 00:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:13:21 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:13:21 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:13:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:21 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:13:21 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:21 [clientInboundChannel-49] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-2 session=cieqbiyj
2025-07-16 00:13:21 [clientInboundChannel-79] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-1 session=cieqbiyj
2025-07-16 00:13:21 [clientInboundChannel-52] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-usercieqbiyj subscriptionId=sub-3 session=cieqbiyj user=3 payload=byte[0]
2025-07-16 00:13:21 [clientInboundChannel-56] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-4 session=cieqbiyj
2025-07-16 00:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:23 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:23 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:13:23 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:23 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:13:23 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:24 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:25 [MessageBroker-12] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [ufsnvl35]
2025-07-16 00:13:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:25 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:26 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:26 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:13:26 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:26 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:13:26 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:29 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:29 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:13:29 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:29 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:13:31 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:31 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:13:31 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:13:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:13:34 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:13:34 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:13:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:13:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:13:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:13:35 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:13:35 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:13:35 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:14:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=cieqbiyj] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:14:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session cieqbiyj
2025-07-16 00:14:18 [http-nio-8080-exec-9] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:14:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:14:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:14:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:14:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752601458810", parameters={masked}
2025-07-16 00:14:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:14:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752601458810
2025-07-16 00:14:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:14:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/917/0cmu41bh/websocket", parameters={}
2025-07-16 00:14:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:14:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/917/0cmu41bh/websocket
2025-07-16 00:14:18 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:14:18 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=0cmu41bh]
2025-07-16 00:14:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:14:18 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:14:18 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:19 [http-nio-8080-exec-1] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:14:19 [http-nio-8080-exec-1] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:14:19 [clientInboundChannel-81] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=0cmu41bh
2025-07-16 00:14:19 [clientOutboundChannel-8] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:14:19 [clientOutboundChannel-8] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:19 [clientInboundChannel-85] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-user0cmu41bh subscriptionId=sub-0 session=0cmu41bh user=3 payload=byte[0]
2025-07-16 00:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:19 [http-nio-8080-exec-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:14:19 [http-nio-8080-exec-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:14:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:19 [clientInboundChannel-87] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=cieqbiyj
2025-07-16 00:14:19 [clientOutboundChannel-9] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@517097ea, simpSessionId=cieqbiyj}], simpUser=com.btalk.security.StompPrincipal@517097ea, simpSessionId=cieqbiyj}]
2025-07-16 00:14:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:20 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:14:20 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:14:20 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:14:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:14:20 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:14:20 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:14:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:14:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:21 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:14:21 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:14:21 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:14:25 [MessageBroker-12] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [cieqbiyj]
2025-07-16 00:14:26 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=0cmu41bh] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:14:26 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session 0cmu41bh
2025-07-16 00:14:26 [http-nio-8080-exec-3] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:14:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:14:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:14:26 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752601466582", parameters={masked}
2025-07-16 00:14:26 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:14:26 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752601466582
2025-07-16 00:14:26 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:14:26 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/089/fabxuurw/websocket", parameters={}
2025-07-16 00:14:26 [http-nio-8080-exec-9] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@59ba219d
2025-07-16 00:14:26 [http-nio-8080-exec-9] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/089/fabxuurw/websocket
2025-07-16 00:14:26 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:14:26 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=fabxuurw]
2025-07-16 00:14:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:14:26 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:14:26 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:14:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:14:26 [http-nio-8080-exec-2] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:14:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:26 [http-nio-8080-exec-2] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:14:26 [clientInboundChannel-90] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=fabxuurw
2025-07-16 00:14:26 [clientOutboundChannel-10] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:14:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:26 [clientOutboundChannel-10] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:14:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:14:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:27 [clientInboundChannel-94] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userfabxuurw subscriptionId=sub-0 session=fabxuurw user=3 payload=byte[0]
2025-07-16 00:14:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:27 [http-nio-8080-exec-3] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:14:27 [http-nio-8080-exec-3] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:14:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:27 [clientInboundChannel-96] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=0cmu41bh
2025-07-16 00:14:27 [clientOutboundChannel-11] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@5f97caf0, simpSessionId=0cmu41bh}], simpUser=com.btalk.security.StompPrincipal@5f97caf0, simpSessionId=0cmu41bh}]
2025-07-16 00:14:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:28 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:14:28 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:14:28 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:14:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:14:28 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:14:28 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:14:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:14:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:14:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:14:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:14:29 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:14:29 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:14:29 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:14:32 [clientInboundChannel-100] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userfabxuurw subscriptionId=sub-1 session=fabxuurw user=3 payload=byte[0]
2025-07-16 00:14:32 [clientInboundChannel-102] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=fabxuurw
2025-07-16 00:14:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:14:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:14:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:14:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:14:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:14:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:14:34 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:14:35 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:35 [MessageBroker-11] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [0cmu41bh]
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:37 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:14:37 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:14:37 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:14:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:14:37 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:14:37 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:14:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:14:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:14:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:14:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:14:39 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:14:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:39 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:14:39 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:14:39 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:14:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:14:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:14:40 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:14:40 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:17:01 [RMI TCP Connection(11)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 00:17:01 [RMI TCP Connection(11)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 00:17:01 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 00:17:01 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 00:17:01 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Closing SockJS session fabxuurw with CloseStatus[code=1001, reason=null]
2025-07-16 00:17:01 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - Transport error in WebSocketServerSockJsSession[id=fabxuurw]
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:778)
	at org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:575)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:324)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 00:17:01 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Failure while sending SockJS close frame
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 00:17:01 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=fabxuurw] closed with CloseStatus[code=1001, reason=null]
2025-07-16 00:17:01 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session fabxuurw
2025-07-16 00:17:01 [RMI TCP Connection(11)-127.0.0.1] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:17:01 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:17:02 [RMI TCP Connection(11)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 00:17:03 [clientInboundChannel-105] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=fabxuurw
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@65dfce2f]]
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@65dfce2f]
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@65dfce2f]
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 00:17:03 [RMI TCP Connection(11)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 00:17:05 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 35220 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 00:17:05 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 00:17:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 00:17:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 86 ms. Found 6 JPA repository interfaces.
2025-07-16 00:17:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 00:17:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 00:17:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 00:17:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 00:17:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1630 ms
2025-07-16 00:17:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 00:17:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 00:17:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 00:17:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 00:17:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 00:17:09 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5df7a065
2025-07-16 00:17:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 00:17:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 00:17:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 00:17:09 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 00:17:11 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 00:17:11 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 00:17:12 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 00:17:12 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 00:17:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-16 00:17:14 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-07-16 00:17:14 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
2025-07-16 00:17:14 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-16 00:17:15 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.AuthController:
	
2025-07-16 00:17:15 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ChatController:
	{[MESSAGE],[/chat/{conversationId}/send]}: sendMessage(Long,MessageDto)
	{[MESSAGE],[/chat/{conversationId}/read]}: markMessagesAsRead(Long,Long)
2025-07-16 00:17:15 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ConversationController:
	
2025-07-16 00:17:15 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.FileUploadController:
	
2025-07-16 00:17:15 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.MessageController:
	
2025-07-16 00:17:15 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.UserController:
	
2025-07-16 00:17:15 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-07-16 00:17:15 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-16 00:17:15 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-16 00:17:15 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 00:17:15 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 00:17:15 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-16 00:17:15 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3e5080ce]
2025-07-16 00:17:15 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3e5080ce]
2025-07-16 00:17:15 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3e5080ce]]
2025-07-16 00:17:15 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-16 00:17:15 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:17:15 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:17:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-16 00:17:15 [main] INFO  com.btalk.BackendApplication - Started BackendApplication in 10.635 seconds (process running for 11.243)
2025-07-16 00:18:15 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-07-16 00:18:44 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 00:18:44 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 00:18:44 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-16 00:18:44 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-16 00:18:44 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-16 00:18:44 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@512542aa
2025-07-16 00:18:44 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3c75ffeb
2025-07-16 00:18:44 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-16 00:18:44 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-07-16 00:18:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:18:45 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:18:45 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:18:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:18:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:18:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:18:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:18:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:47 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:18:47 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:18:47 [http-nio-8080-exec-4] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-16 00:18:47 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:18:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:18:50 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:18:50 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:18:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:18:50 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:18:50 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:18:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:18:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:18:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:18:50 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:18:50 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:18:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:18:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:18:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:18:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:51 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:51 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:18:51 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:18:51 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:18:53 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:18:53 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:18:53 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:19:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:19:32 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752601772637", parameters={masked}
2025-07-16 00:19:32 [http-nio-8080-exec-1] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@4a595315
2025-07-16 00:19:32 [http-nio-8080-exec-1] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752601772637
2025-07-16 00:19:32 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:19:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/078/03jhce5x/websocket", parameters={}
2025-07-16 00:19:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@4a595315
2025-07-16 00:19:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/078/03jhce5x/websocket
2025-07-16 00:19:32 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:19:32 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=03jhce5x]
2025-07-16 00:19:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:19:32 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:19:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:19:32 [http-nio-8080-exec-2] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:19:32 [clientInboundChannel-2] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=03jhce5x
2025-07-16 00:19:32 [http-nio-8080-exec-2] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:19:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:19:32 [clientOutboundChannel-1] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:19:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:19:33 [clientOutboundChannel-1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:19:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:19:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:19:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:33 [clientInboundChannel-6] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-user03jhce5x subscriptionId=sub-0 session=03jhce5x user=3 payload=byte[0]
2025-07-16 00:19:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:19:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:19:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:19:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:19:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:19:34 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:19:34 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:19:34 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:19:34 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:19:34 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:19:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:19:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:19:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:19:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:19:35 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:19:35 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:19:35 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:19:36 [clientInboundChannel-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-user03jhce5x subscriptionId=sub-1 session=03jhce5x user=3 payload=byte[0]
2025-07-16 00:19:36 [clientInboundChannel-11] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=03jhce5x
2025-07-16 00:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:19:36 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:19:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:19:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:39 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:19:39 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:19:39 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:19:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:19:41 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:19:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:19:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:19:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:19:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:19:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:19:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:19:44 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:19:44 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:19:44 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:19:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:19:45 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?conversationId=66&userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:19:45 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:19:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:19:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:19:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:19:46 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:19:46 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:19:46 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:20:31 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=03jhce5x] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:20:31 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session 03jhce5x
2025-07-16 00:20:31 [http-nio-8080-exec-5] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:20:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:20:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:20:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752601832049", parameters={masked}
2025-07-16 00:20:32 [http-nio-8080-exec-6] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@4a595315
2025-07-16 00:20:32 [http-nio-8080-exec-6] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752601832049
2025-07-16 00:20:32 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:20:32 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/720/wb3pcmlt/websocket", parameters={}
2025-07-16 00:20:32 [http-nio-8080-exec-10] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@4a595315
2025-07-16 00:20:32 [http-nio-8080-exec-10] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/720/wb3pcmlt/websocket
2025-07-16 00:20:32 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:20:32 [http-nio-8080-exec-10] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=wb3pcmlt]
2025-07-16 00:20:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:20:32 [http-nio-8080-exec-9] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:20:32 [clientInboundChannel-14] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=wb3pcmlt
2025-07-16 00:20:32 [http-nio-8080-exec-9] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:20:32 [clientOutboundChannel-2] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:20:32 [clientOutboundChannel-2] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:20:32 [clientInboundChannel-18] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userwb3pcmlt subscriptionId=sub-0 session=wb3pcmlt user=3 payload=byte[0]
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:20:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:20:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:20:33 [http-nio-8080-exec-5] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:20:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:20:33 [http-nio-8080-exec-5] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:20:33 [clientInboundChannel-20] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=03jhce5x
2025-07-16 00:20:33 [clientOutboundChannel-3] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@1a489a3, simpSessionId=03jhce5x}], simpUser=com.btalk.security.StompPrincipal@1a489a3, simpSessionId=03jhce5x}]
2025-07-16 00:20:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:20:33 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:20:33 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:20:33 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:20:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:20:33 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:20:33 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:20:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:20:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:20:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:20:33 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:20:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:20:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:20:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:20:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:20:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:20:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:20:34 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:20:34 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:20:36 [clientInboundChannel-24] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userwb3pcmlt subscriptionId=sub-1 session=wb3pcmlt user=3 payload=byte[0]
2025-07-16 00:20:36 [clientInboundChannel-26] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=wb3pcmlt
2025-07-16 00:20:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:20:36 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:20:36 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:20:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:20:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:20:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:37 [MessageBroker-13] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [03jhce5x]
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:39 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:20:39 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:20:39 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:20:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:20:39 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:20:39 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:20:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:20:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:20:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:20:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:20:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:20:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:20:41 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:20:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:20:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:20:43 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:20:43 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:20:44 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:20:44 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:20:44 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:24:47 [http-nio-8080-exec-6] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=wb3pcmlt] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:24:47 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session wb3pcmlt
2025-07-16 00:24:47 [http-nio-8080-exec-6] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:24:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:24:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:24:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:24:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:24:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:24:48 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752602088084", parameters={masked}
2025-07-16 00:24:48 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@4a595315
2025-07-16 00:24:48 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752602088084
2025-07-16 00:24:48 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:24:48 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/263/sqz0ahe3/websocket", parameters={}
2025-07-16 00:24:48 [http-nio-8080-exec-1] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@4a595315
2025-07-16 00:24:48 [http-nio-8080-exec-1] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/263/sqz0ahe3/websocket
2025-07-16 00:24:48 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:24:48 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=sqz0ahe3]
2025-07-16 00:24:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:24:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:24:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-2] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:24:48 [clientInboundChannel-29] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=sqz0ahe3
2025-07-16 00:24:48 [http-nio-8080-exec-2] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:24:48 [clientOutboundChannel-4] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:24:48 [clientOutboundChannel-4] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:24:48 [clientInboundChannel-33] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-usersqz0ahe3 subscriptionId=sub-0 session=sqz0ahe3 user=3 payload=byte[0]
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:24:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:24:48 [http-nio-8080-exec-6] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:24:48 [http-nio-8080-exec-6] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:24:48 [clientInboundChannel-35] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=wb3pcmlt
2025-07-16 00:24:48 [clientOutboundChannel-5] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@78305814, simpSessionId=wb3pcmlt}], simpUser=com.btalk.security.StompPrincipal@78305814, simpSessionId=wb3pcmlt}]
2025-07-16 00:24:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:24:49 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:24:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:24:49 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:24:49 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:24:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:24:49 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:24:49 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:24:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:24:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:24:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:24:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:24:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:24:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:24:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:24:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:24:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:24:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:24:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:24:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:24:50 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:24:50 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:24:52 [MessageBroker-10] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [wb3pcmlt]
2025-07-16 00:26:10 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 00:26:10 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 00:26:10 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 00:26:10 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 00:26:10 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Closing SockJS session sqz0ahe3 with CloseStatus[code=1001, reason=null]
2025-07-16 00:26:10 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - Transport error in WebSocketServerSockJsSession[id=sqz0ahe3]
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:778)
	at org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:575)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:324)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 00:26:10 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Failure while sending SockJS close frame
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 00:26:10 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=sqz0ahe3] closed with CloseStatus[code=1001, reason=null]
2025-07-16 00:26:10 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session sqz0ahe3
2025-07-16 00:26:10 [RMI TCP Connection(12)-127.0.0.1] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:26:10 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:26:11 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:26:11 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:26:11 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:26:11 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:26:11 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:26:11 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:26:11 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:26:11 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:26:11 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:26:11 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3e5080ce]]
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3e5080ce]
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@3e5080ce]
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 00:26:12 [RMI TCP Connection(12)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 00:26:14 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 7372 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 00:26:14 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 00:26:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 00:26:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 6 JPA repository interfaces.
2025-07-16 00:26:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 00:26:15 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 00:26:15 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 00:26:15 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 00:26:15 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1475 ms
2025-07-16 00:26:16 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 00:26:16 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 00:26:16 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 00:26:16 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 00:26:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 00:26:17 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c69e1e1
2025-07-16 00:26:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 00:26:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 00:26:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 00:26:17 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 00:26:19 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 00:26:19 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 00:26:19 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 00:26:20 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 00:26:20 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'chatController' defined in file [C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes\com\btalk\controller\ChatController.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'messageServiceImpl' defined in file [C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes\com\btalk\service\impl\MessageServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'messageRepository' defined in com.btalk.repository.MessageRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable); Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable)
2025-07-16 00:26:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 00:26:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 00:26:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 00:26:20 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-16 00:26:20 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-16 00:26:20 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'chatController' defined in file [C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes\com\btalk\controller\ChatController.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'messageServiceImpl' defined in file [C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes\com\btalk\service\impl\MessageServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'messageRepository' defined in com.btalk.repository.MessageRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable); Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.btalk.BackendApplication.main(BackendApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'messageServiceImpl' defined in file [C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes\com\btalk\service\impl\MessageServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'messageRepository' defined in com.btalk.repository.MessageRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable); Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1745)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'messageRepository' defined in com.btalk.repository.MessageRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable); Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1683)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 35 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable); Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable)
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:120)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:434)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 45 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.btalk.repository.MessageRepository.findMessagesBefore(java.lang.Long,java.time.LocalDateTime,org.springframework.data.domain.Pageable)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:97)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:67)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:49)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:174)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:254)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	... 57 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'conversation' of 'com.btalk.entity.Message' [SELECT m FROM Message m WHERE m.conversation.id = :conversationId AND m.sentAt < :before ORDER BY m.sentAt DESC]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:143)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:886)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:796)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy127.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:91)
	... 63 common frames omitted
Caused by: org.hibernate.query.sqm.UnknownPathException: Could not resolve attribute 'conversation' of 'com.btalk.entity.Message' [SELECT m FROM Message m WHERE m.conversation.id = :conversationId AND m.sentAt < :before ORDER BY m.sentAt DESC]
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:88)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.createHqlInterpretation(QueryInterpretationCacheStandardImpl.java:145)
	at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.resolveHqlInterpretation(QueryInterpretationCacheStandardImpl.java:132)
	at org.hibernate.query.spi.QueryEngine.interpretHql(QueryEngine.java:54)
	at org.hibernate.internal.AbstractSharedSessionContract.interpretHql(AbstractSharedSessionContract.java:832)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:878)
	... 72 common frames omitted
Caused by: org.hibernate.query.sqm.PathElementException: Could not resolve attribute 'conversation' of 'com.btalk.entity.Message'
	at org.hibernate.query.sqm.SqmPathSource.getSubPathSource(SqmPathSource.java:95)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmPath.get(AbstractSqmPath.java:198)
	at org.hibernate.query.sqm.tree.domain.AbstractSqmFrom.resolvePathPart(AbstractSqmFrom.java:198)
	at org.hibernate.query.hql.internal.DomainPathPart.resolvePathPart(DomainPathPart.java:42)
	at org.hibernate.query.hql.internal.BasicDotIdentifierConsumer.consumeIdentifier(BasicDotIdentifierConsumer.java:92)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimplePath(SemanticQueryBuilder.java:5465)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathFragment(SemanticQueryBuilder.java:5298)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitGeneralPathExpression(SemanticQueryBuilder.java:1891)
	at org.hibernate.grammars.hql.HqlParser$GeneralPathExpressionContext.accept(HqlParser.java:8268)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at org.hibernate.grammars.hql.HqlParserBaseVisitor.visitBarePrimaryExpression(HqlParserBaseVisitor.java:812)
	at org.hibernate.grammars.hql.HqlParser$BarePrimaryExpressionContext.accept(HqlParser.java:7726)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.createComparisonPredicate(SemanticQueryBuilder.java:2548)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:2509)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitComparisonPredicate(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$ComparisonPredicateContext.accept(HqlParser.java:6611)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:2378)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitAndPredicate(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$AndPredicateContext.accept(HqlParser.java:6461)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:2361)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitWhereClause(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$WhereClauseContext.accept(HqlParser.java:6302)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuery(SemanticQueryBuilder.java:1259)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:1040)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitQuerySpecExpression(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$QuerySpecExpressionContext.accept(HqlParser.java:2134)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:1025)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSimpleQueryGroup(SemanticQueryBuilder.java:277)
	at org.hibernate.grammars.hql.HqlParser$SimpleQueryGroupContext.accept(HqlParser.java:2005)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitSelectStatement(SemanticQueryBuilder.java:492)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.visitStatement(SemanticQueryBuilder.java:451)
	at org.hibernate.query.hql.internal.SemanticQueryBuilder.buildSemanticModel(SemanticQueryBuilder.java:324)
	at org.hibernate.query.hql.internal.StandardHqlTranslator.translate(StandardHqlTranslator.java:71)
	... 77 common frames omitted
2025-07-16 00:26:45 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 18200 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 00:26:45 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 00:26:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 00:26:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 96 ms. Found 6 JPA repository interfaces.
2025-07-16 00:26:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 00:26:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 00:26:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 00:26:46 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 00:26:46 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1637 ms
2025-07-16 00:26:46 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 00:26:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 00:26:47 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 00:26:47 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 00:26:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 00:26:48 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@114b203
2025-07-16 00:26:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 00:26:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 00:26:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 00:26:48 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 00:26:49 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 00:26:50 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 00:26:50 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 00:26:51 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 00:26:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.AuthController:
	
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ChatController:
	{[MESSAGE],[/chat/{conversationId}/read]}: markMessagesAsRead(Long,Long)
	{[MESSAGE],[/chat/{conversationId}/send]}: sendMessage(Long,MessageDto)
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ConversationController:
	
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.FileUploadController:
	
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.MessageController:
	
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.UserController:
	
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-16 00:26:52 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-16 00:26:52 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 00:26:52 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 00:26:52 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-16 00:26:52 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@226715da]
2025-07-16 00:26:52 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@226715da]
2025-07-16 00:26:52 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@226715da]]
2025-07-16 00:26:52 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-16 00:26:52 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:26:52 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:26:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-16 00:26:52 [main] INFO  com.btalk.BackendApplication - Started BackendApplication in 8.043 seconds (process running for 8.598)
2025-07-16 00:27:06 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 00:27:06 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 00:27:06 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-16 00:27:06 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-16 00:27:06 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-16 00:27:06 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@209c0be5
2025-07-16 00:27:06 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4c026825
2025-07-16 00:27:06 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-16 00:27:06 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-07-16 00:27:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:27:07 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:27:07 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:27:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:27:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:27:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:27:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:27:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:09 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:27:09 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:27:10 [http-nio-8080-exec-7] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-16 00:27:10 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:12 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:27:12 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:27:12 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:27:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:27:12 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:27:12 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:27:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:27:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:27:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:27:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:27:15 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:27:15 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:27:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:27:17 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T06:33:33&page=1&size=20", parameters={masked}
2025-07-16 00:27:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, String, int, int)
2025-07-16 00:27:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:27:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:27:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:27:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:27:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:27:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:27:52 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-07-16 00:31:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:31:15 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752602475561", parameters={masked}
2025-07-16 00:31:15 [http-nio-8080-exec-7] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@22c5a7fd
2025-07-16 00:31:15 [http-nio-8080-exec-7] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752602475561
2025-07-16 00:31:15 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:31:15 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/085/gl5km1j1/websocket", parameters={}
2025-07-16 00:31:15 [http-nio-8080-exec-4] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@22c5a7fd
2025-07-16 00:31:15 [http-nio-8080-exec-4] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/085/gl5km1j1/websocket
2025-07-16 00:31:15 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:31:15 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:31:15 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:31:15 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=gl5km1j1]
2025-07-16 00:31:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:31:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:31:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:31:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:31:15 [http-nio-8080-exec-5] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:31:15 [http-nio-8080-exec-5] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:31:15 [clientInboundChannel-2] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=gl5km1j1
2025-07-16 00:31:15 [clientOutboundChannel-1] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:31:16 [clientOutboundChannel-1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:31:16 [clientInboundChannel-6] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-usergl5km1j1 subscriptionId=sub-0 session=gl5km1j1 user=3 payload=byte[0]
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:31:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:31:16 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:31:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:31:18 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:31:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:31:18 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:31:18 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:33:36 [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 00:33:36 [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 00:33:37 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Closing SockJS session gl5km1j1 with CloseStatus[code=1001, reason=null]
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - Transport error in WebSocketServerSockJsSession[id=gl5km1j1]
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:778)
	at org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:575)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:324)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Failure while sending SockJS close frame
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=gl5km1j1] closed with CloseStatus[code=1001, reason=null]
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session gl5km1j1
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:33:37 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 00:33:38 [clientInboundChannel-8] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=gl5km1j1
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@226715da]]
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@226715da]
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@226715da]
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 00:33:38 [RMI TCP Connection(10)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 00:33:41 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 10332 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 00:33:41 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 00:33:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 00:33:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 6 JPA repository interfaces.
2025-07-16 00:33:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 00:33:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 00:33:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 00:33:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 00:33:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1524 ms
2025-07-16 00:33:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 00:33:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 00:33:42 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 00:33:43 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 00:33:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 00:33:44 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@351ede23
2025-07-16 00:33:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 00:33:44 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 00:33:44 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 00:33:44 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 00:33:45 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 00:33:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 00:33:46 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 00:33:47 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 00:33:47 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-16 00:33:47 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-07-16 00:33:47 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
2025-07-16 00:33:48 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-16 00:33:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.AuthController:
	
2025-07-16 00:33:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ChatController:
	{[MESSAGE],[/chat/{conversationId}/send]}: sendMessage(Long,MessageDto)
	{[MESSAGE],[/chat/{conversationId}/read]}: markMessagesAsRead(Long,Long)
2025-07-16 00:33:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ConversationController:
	
2025-07-16 00:33:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.FileUploadController:
	
2025-07-16 00:33:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.MessageController:
	
2025-07-16 00:33:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.UserController:
	
2025-07-16 00:33:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-07-16 00:33:48 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-16 00:33:48 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-16 00:33:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 00:33:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 00:33:48 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-16 00:33:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4086dd5f]
2025-07-16 00:33:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4086dd5f]
2025-07-16 00:33:48 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4086dd5f]]
2025-07-16 00:33:48 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-16 00:33:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:33:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 00:33:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-16 00:33:48 [main] INFO  com.btalk.BackendApplication - Started BackendApplication in 7.995 seconds (process running for 8.539)
2025-07-16 00:33:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 00:33:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 00:33:52 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-16 00:33:52 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-16 00:33:52 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-16 00:33:52 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4a25da63
2025-07-16 00:33:52 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@3119ce7a
2025-07-16 00:33:52 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-16 00:33:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-07-16 00:33:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:33:53 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:33:53 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:33:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:33:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:33:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:33:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:33:56 [http-nio-8080-exec-6] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-16 00:33:56 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:33:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:33:56 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:33:56 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:33:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:33:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:33:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:33:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:33:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:33:58 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:33:58 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:33:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:33:58 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:33:58 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:33:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:33:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:33:59 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:33:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:00 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:34:00 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:34:00 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:01 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:34:01 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:34:01 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:34:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:34:11 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752602651556", parameters={masked}
2025-07-16 00:34:11 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@79611f57
2025-07-16 00:34:11 [http-nio-8080-exec-2] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752602651556
2025-07-16 00:34:11 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:34:11 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/874/4rk44zjs/websocket", parameters={}
2025-07-16 00:34:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@79611f57
2025-07-16 00:34:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/874/4rk44zjs/websocket
2025-07-16 00:34:11 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:34:11 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=4rk44zjs]
2025-07-16 00:34:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:34:11 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:34:11 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:34:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:34:11 [http-nio-8080-exec-3] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:34:11 [clientInboundChannel-2] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=4rk44zjs
2025-07-16 00:34:11 [http-nio-8080-exec-3] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:34:11 [clientOutboundChannel-1] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:34:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:34:12 [clientOutboundChannel-1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:12 [clientInboundChannel-6] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-user4rk44zjs subscriptionId=sub-0 session=4rk44zjs user=3 payload=byte[0]
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:34:12 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:34:12 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:34:13 [clientInboundChannel-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-user4rk44zjs subscriptionId=sub-1 session=4rk44zjs user=3 payload=byte[0]
2025-07-16 00:34:13 [clientInboundChannel-11] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=4rk44zjs
2025-07-16 00:34:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:34:13 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:34:13 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:34:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:34:14 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:34:14 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:34:14 [clientInboundChannel-14] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-1 session=4rk44zjs
2025-07-16 00:34:14 [clientInboundChannel-17] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-2 session=4rk44zjs
2025-07-16 00:34:14 [clientInboundChannel-21] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-user4rk44zjs subscriptionId=sub-3 session=4rk44zjs user=3 payload=byte[0]
2025-07-16 00:34:14 [clientInboundChannel-23] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-4 session=4rk44zjs
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:16 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:16 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:34:16 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:34:16 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:34:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:34:16 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:34:16 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:34:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:34:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:34:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:34:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:34:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:34:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:34:18 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:21 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:34:21 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:34:21 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:34:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:34:21 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:34:21 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:34:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:34:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:34:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:34:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:34:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:21 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:34:23 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:34:23 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:34:23 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:34:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:34:30 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:34:30 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 00:34:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:34:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:34:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:34:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:34:31 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:34:31 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:34:48 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 24, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannel[pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 13, active threads = 1, queued tasks = 2, completed tasks = 9]
2025-07-16 00:36:46 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=4rk44zjs] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:36:46 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session 4rk44zjs
2025-07-16 00:36:46 [http-nio-8080-exec-3] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:36:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:36:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:36:46 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752602806630", parameters={masked}
2025-07-16 00:36:46 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@79611f57
2025-07-16 00:36:46 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752602806630
2025-07-16 00:36:46 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:36:46 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/932/ekx1fc0n/websocket", parameters={}
2025-07-16 00:36:46 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@79611f57
2025-07-16 00:36:46 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/932/ekx1fc0n/websocket
2025-07-16 00:36:46 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:36:46 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=ekx1fc0n]
2025-07-16 00:36:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:36:46 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:36:46 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:36:46 [http-nio-8080-exec-10] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:36:46 [http-nio-8080-exec-10] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:36:46 [clientInboundChannel-26] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=ekx1fc0n
2025-07-16 00:36:46 [clientOutboundChannel-2] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:36:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:36:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:36:46 [clientOutboundChannel-2] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:36:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:36:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:36:47 [clientInboundChannel-30] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userekx1fc0n subscriptionId=sub-0 session=ekx1fc0n user=3 payload=byte[0]
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:36:47 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:36:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:36:47 [http-nio-8080-exec-3] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:36:47 [clientInboundChannel-32] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=4rk44zjs
2025-07-16 00:36:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:36:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:36:47 [clientOutboundChannel-3] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@74bcd1c, simpSessionId=4rk44zjs}], simpUser=com.btalk.security.StompPrincipal@74bcd1c, simpSessionId=4rk44zjs}]
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:36:49 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:36:49 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:36:49 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:36:51 [MessageBroker-8] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [4rk44zjs]
2025-07-16 00:36:52 [clientInboundChannel-36] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userekx1fc0n subscriptionId=sub-1 session=ekx1fc0n user=3 payload=byte[0]
2025-07-16 00:36:52 [clientInboundChannel-38] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=ekx1fc0n
2025-07-16 00:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:36:52 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:36:52 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:54 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:36:54 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:36:54 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:36:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:36:54 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:36:54 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:36:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:36:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:36:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:36:56 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:36:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:36:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:36:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:36:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 00:36:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:36:59 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:36:59 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:36:59 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:36:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:36:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:36:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:36:59 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 1 containing UNKNO (truncated)...]
2025-07-16 00:36:59 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:39:01 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=ekx1fc0n] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:39:01 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session ekx1fc0n
2025-07-16 00:39:01 [http-nio-8080-exec-8] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:39:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:39:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:39:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:39:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:39:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:39:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752602942065", parameters={masked}
2025-07-16 00:39:02 [http-nio-8080-exec-7] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@79611f57
2025-07-16 00:39:02 [http-nio-8080-exec-7] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752602942065
2025-07-16 00:39:02 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:39:02 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/589/xdlaxa12/websocket", parameters={}
2025-07-16 00:39:02 [http-nio-8080-exec-4] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@79611f57
2025-07-16 00:39:02 [http-nio-8080-exec-4] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/589/xdlaxa12/websocket
2025-07-16 00:39:02 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:39:02 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=xdlaxa12]
2025-07-16 00:39:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:39:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-3] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:39:02 [http-nio-8080-exec-3] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:39:02 [clientInboundChannel-41] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=xdlaxa12
2025-07-16 00:39:02 [clientOutboundChannel-4] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:39:02 [clientOutboundChannel-4] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:39:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:39:02 [clientInboundChannel-45] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userxdlaxa12 subscriptionId=sub-0 session=xdlaxa12 user=3 payload=byte[0]
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-8] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:39:02 [http-nio-8080-exec-8] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:39:02 [clientInboundChannel-47] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=ekx1fc0n
2025-07-16 00:39:02 [clientOutboundChannel-5] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@23ceb1ff, simpSessionId=ekx1fc0n}], simpUser=com.btalk.security.StompPrincipal@23ceb1ff, simpSessionId=ekx1fc0n}]
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:39:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:03 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:39:03 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:39:03 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:39:03 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:39:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:39:03 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:39:03 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:39:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:39:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:39:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:39:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:39:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:39:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:39:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:39:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:39:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:39:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:39:04 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:39:04 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:39:06 [MessageBroker-3] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [ekx1fc0n]
2025-07-16 00:39:15 [clientInboundChannel-51] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userxdlaxa12 subscriptionId=sub-1 session=xdlaxa12 user=3 payload=byte[0]
2025-07-16 00:39:15 [clientInboundChannel-53] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=xdlaxa12
2025-07-16 00:39:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:39:18 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:39:18 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:39:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:39:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:39:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:39:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:39:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:39:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:39:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:39:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:18 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:20 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:39:20 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:39:20 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:39:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:39:20 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:39:20 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:39:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:39:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:39:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:39:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 51 containing com. (truncated)...]
2025-07-16 00:39:22 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:39:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:39:26 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T00:03:33.000Z&page=0&size=20", parameters={masked}
2025-07-16 00:39:26 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 00:39:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:39:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:39:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:39:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:39:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:39:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 1 containing com.b (truncated)...]
2025-07-16 00:39:27 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:41:17 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=xdlaxa12] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:41:17 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session xdlaxa12
2025-07-16 00:41:17 [http-nio-8080-exec-7] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:41:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:41:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:41:17 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752603077849", parameters={masked}
2025-07-16 00:41:17 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@79611f57
2025-07-16 00:41:17 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752603077849
2025-07-16 00:41:17 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:41:17 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/373/dm1ojdri/websocket", parameters={}
2025-07-16 00:41:17 [http-nio-8080-exec-10] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@79611f57
2025-07-16 00:41:17 [http-nio-8080-exec-10] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/373/dm1ojdri/websocket
2025-07-16 00:41:17 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:41:17 [http-nio-8080-exec-10] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=dm1ojdri]
2025-07-16 00:41:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:41:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:41:17 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:41:17 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:41:18 [http-nio-8080-exec-9] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:41:18 [http-nio-8080-exec-9] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:41:18 [clientInboundChannel-56] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=dm1ojdri
2025-07-16 00:41:18 [clientOutboundChannel-6] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:41:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:41:18 [clientOutboundChannel-6] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:41:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:41:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:41:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:18 [clientInboundChannel-60] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userdm1ojdri subscriptionId=sub-0 session=dm1ojdri user=3 payload=byte[0]
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:41:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:41:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:41:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:41:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:41:18 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:41:18 [http-nio-8080-exec-7] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:41:18 [clientInboundChannel-62] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=xdlaxa12
2025-07-16 00:41:18 [clientOutboundChannel-7] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@30f54e5c, simpSessionId=xdlaxa12}], simpUser=com.btalk.security.StompPrincipal@30f54e5c, simpSessionId=xdlaxa12}]
2025-07-16 00:41:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:41:19 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:41:19 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:41:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:41:20 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:41:20 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:41:20 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:41:22 [clientInboundChannel-66] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userdm1ojdri subscriptionId=sub-1 session=dm1ojdri user=3 payload=byte[0]
2025-07-16 00:41:22 [clientInboundChannel-68] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=dm1ojdri
2025-07-16 00:41:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:41:22 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:41:22 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:41:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:41:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:41:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:41:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:41:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:24 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:41:24 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 00:41:24 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:41:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:41:24 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:41:24 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:41:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [MessageBroker-11] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [xdlaxa12]
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:41:27 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 00:41:27 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:28 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:41:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:41:29 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 00:41:29 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:41:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:41:30 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=0&size=20", parameters={masked}
2025-07-16 00:41:30 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 00:41:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:41:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:41:31 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:41:31 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 0 containing UNKNO (truncated)...]
2025-07-16 00:41:31 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:42:15 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=dm1ojdri] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:42:15 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session dm1ojdri
2025-07-16 00:42:15 [http-nio-8080-exec-2] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:42:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:42:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:42:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:42:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:42:15 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:42:15 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:42:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752603135620", parameters={masked}
2025-07-16 00:42:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@79611f57
2025-07-16 00:42:15 [http-nio-8080-exec-3] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752603135620
2025-07-16 00:42:15 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:42:15 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/816/wc25r5sg/websocket", parameters={}
2025-07-16 00:42:15 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@79611f57
2025-07-16 00:42:15 [http-nio-8080-exec-8] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/816/wc25r5sg/websocket
2025-07-16 00:42:15 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 00:42:15 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=wc25r5sg]
2025-07-16 00:42:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:42:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:42:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:42:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:42:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:42:15 [http-nio-8080-exec-10] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 00:42:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:15 [clientInboundChannel-71] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=wc25r5sg
2025-07-16 00:42:15 [http-nio-8080-exec-10] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 00:42:15 [clientOutboundChannel-8] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 00:42:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:42:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:42:15 [clientOutboundChannel-8] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:42:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:42:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:42:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:42:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:42:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:42:16 [clientInboundChannel-75] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userwc25r5sg subscriptionId=sub-0 session=wc25r5sg user=3 payload=byte[0]
2025-07-16 00:42:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:42:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:42:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:42:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:42:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:42:16 [http-nio-8080-exec-2] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:42:16 [http-nio-8080-exec-2] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:42:16 [clientInboundChannel-77] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=dm1ojdri
2025-07-16 00:42:16 [clientOutboundChannel-9] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@4cd14457, simpSessionId=dm1ojdri}], simpUser=com.btalk.security.StompPrincipal@4cd14457, simpSessionId=dm1ojdri}]
2025-07-16 00:42:16 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:42:16 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:42:16 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:42:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:42:16 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 00:42:16 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 00:42:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:42:16 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 00:42:17 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:42:20 [clientInboundChannel-81] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userwc25r5sg subscriptionId=sub-1 session=wc25r5sg user=3 payload=byte[0]
2025-07-16 00:42:20 [clientInboundChannel-83] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=wc25r5sg
2025-07-16 00:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:42:20 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:42:20 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:42:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [MessageBroker-14] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [dm1ojdri]
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:22 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:42:22 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 00:42:22 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:42:22 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:42:22 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:42:22 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:24 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:25 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:42:25 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 00:42:25 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:42:27 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:42:27 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 00:42:27 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:42:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:42:28 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=1&size=20", parameters={masked}
2025-07-16 00:42:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 00:42:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:42:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 00:42:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 00:42:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:42:28 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 0 containing UNKNO (truncated)...]
2025-07-16 00:42:28 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:44:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:44:40 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users/search?query=T", parameters={masked}
2025-07-16 00:44:40 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.UserController#searchUsers(String)
2025-07-16 00:44:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.name like replace(?, '\\', '\\\\')
2025-07-16 00:44:40 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:44:40 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Users retrieved successfully, data=[UserDto(userId=2, phoneNumber= (truncated)...]
2025-07-16 00:44:40 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:44:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:44:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users/search?query=H", parameters={masked}
2025-07-16 00:44:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.UserController#searchUsers(String)
2025-07-16 00:44:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.name like replace(?, '\\', '\\\\')
2025-07-16 00:44:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:44:49 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Users retrieved successfully, data=[UserDto(userId=2, phoneNumber= (truncated)...]
2025-07-16 00:44:49 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:44:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:44:54 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users/search?query=T", parameters={masked}
2025-07-16 00:44:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.UserController#searchUsers(String)
2025-07-16 00:44:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.name like replace(?, '\\', '\\\\')
2025-07-16 00:44:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:44:54 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Users retrieved successfully, data=[UserDto(userId=2, phoneNumber= (truncated)...]
2025-07-16 00:44:54 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:45:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:45:10 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/conversations/group?creatorId=3&name=Happy%20Group", parameters={masked}
2025-07-16 00:45:10 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#createGroupConversation(Long, String, List)
2025-07-16 00:45:10 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [[2, 4, 3]]
2025-07-16 00:45:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        conversations
        (created_at, creator_id, name, type) 
    values
        (?, ?, ?, ?)
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        participants
        (conversation_id, joined_at, left_at, user_id) 
    values
        (?, ?, ?, ?)
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        participants
        (conversation_id, joined_at, left_at, user_id) 
    values
        (?, ?, ?, ?)
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        participants
        (conversation_id, joined_at, left_at, user_id) 
    values
        (?, ?, ?, ?)
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/queue/conversation-updates-userwc25r5sg session=null payload={"success":true,"message":"New group conversation created","data":{"conversation...(truncated)
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Broadcasting to 1 sessions.
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Group conversation created successfully, data=ConversationDto(conv (truncated)...]
2025-07-16 00:45:11 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:45:13 [clientInboundChannel-86] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-1 session=wc25r5sg
2025-07-16 00:45:13 [clientInboundChannel-89] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing UNSUBSCRIBE id=sub-2 session=wc25r5sg
2025-07-16 00:45:13 [clientInboundChannel-93] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userwc25r5sg subscriptionId=sub-3 session=wc25r5sg user=3 payload=byte[0]
2025-07-16 00:45:13 [clientInboundChannel-95] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/68/messages id=sub-4 session=wc25r5sg
2025-07-16 00:45:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:45:14 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/68/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:45:14 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:45:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:45:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:45:14 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:45:14 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 0 containing UNKNO (truncated)...]
2025-07-16 00:45:14 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:45:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:45:14 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/68/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:45:14 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:45:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:45:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:45:15 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:45:15 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 0 containing UNKNO (truncated)...]
2025-07-16 00:45:15 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:45:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 00:45:15 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/68/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 00:45:15 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 00:45:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 00:45:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 00:45:15 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 00:45:15 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 0 containing UNKNO (truncated)...]
2025-07-16 00:45:15 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 00:45:16 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=wc25r5sg] closed with CloseStatus[code=1000, reason=null]
2025-07-16 00:45:16 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session wc25r5sg
2025-07-16 00:45:16 [http-nio-8080-exec-4] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 00:45:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:45:17 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 00:45:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 00:45:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 00:45:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 00:45:18 [http-nio-8080-exec-4] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 00:45:18 [http-nio-8080-exec-4] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 00:45:18 [http-nio-8080-exec-4] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/68/user-offline session=null payload=3
2025-07-16 00:45:18 [clientInboundChannel-98] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=wc25r5sg
2025-07-16 00:45:18 [clientOutboundChannel-12] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - No session for GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT_ACK, simpDisconnectMessage=GenericMessage [payload=byte[0], headers={simpMessageType=DISCONNECT, stompCommand=DISCONNECT, simpSessionAttributes={org.springframework.messaging.simp.SimpAttributes.COMPLETED=true}, simpUser=com.btalk.security.StompPrincipal@44f209d1, simpSessionId=wc25r5sg}], simpUser=com.btalk.security.StompPrincipal@44f209d1, simpSessionId=wc25r5sg}]
2025-07-16 00:45:31 [MessageBroker-10] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Closed 1 sessions: [wc25r5sg]
2025-07-16 18:59:08 [MessageBroker-14] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 99], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 248]
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@5baf01fc (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=18h10m20s916ms323µs900ns).
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@351ede23 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@659a4192 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@222f7e6d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@25d331e6 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@78e6b532 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@4fc7fd6d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@16c22eee (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@2aa271d1 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-07-16 18:59:16 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@67a01e92 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 18:59:42 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4086dd5f]]
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4086dd5f]
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4086dd5f]
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 18:59:42 [RMI TCP Connection(21)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 18:59:44 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 37564 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 18:59:44 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 18:59:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 18:59:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 6 JPA repository interfaces.
2025-07-16 18:59:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 18:59:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 18:59:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 18:59:45 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 18:59:45 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1041 ms
2025-07-16 18:59:45 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 18:59:45 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 18:59:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 18:59:46 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 18:59:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 18:59:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7b52b18a
2025-07-16 18:59:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 18:59:47 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 18:59:47 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 18:59:47 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 18:59:48 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 18:59:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 18:59:48 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 18:59:49 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 18:59:49 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.AuthController:
	
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ChatController:
	{[MESSAGE],[/chat/{conversationId}/send]}: sendMessage(Long,MessageDto)
	{[MESSAGE],[/chat/{conversationId}/read]}: markMessagesAsRead(Long,Long)
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ConversationController:
	
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.FileUploadController:
	
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.MessageController:
	
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.UserController:
	
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-16 18:59:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-16 18:59:49 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 18:59:49 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 18:59:49 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-16 18:59:49 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5403d95]
2025-07-16 18:59:49 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5403d95]
2025-07-16 18:59:49 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5403d95]]
2025-07-16 18:59:49 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-16 18:59:49 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 18:59:49 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 18:59:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-16 18:59:49 [main] INFO  com.btalk.BackendApplication - Started BackendApplication in 5.742 seconds (process running for 6.174)
2025-07-16 19:00:23 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 19:00:23 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 19:00:23 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-16 19:00:23 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-16 19:00:23 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-16 19:00:23 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7476c5c2
2025-07-16 19:00:23 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1dece75a
2025-07-16 19:00:23 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-16 19:00:23 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-16 19:00:23 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752669023454", parameters={masked}
2025-07-16 19:00:23 [http-nio-8080-exec-3] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@7240599c
2025-07-16 19:00:23 [http-nio-8080-exec-3] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752669023454
2025-07-16 19:00:23 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:00:23 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/549/hjpdk3cm/websocket", parameters={}
2025-07-16 19:00:23 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@7240599c
2025-07-16 19:00:23 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/549/hjpdk3cm/websocket
2025-07-16 19:00:23 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 19:00:23 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=hjpdk3cm]
2025-07-16 19:00:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:00:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:00:24 [http-nio-8080-exec-5] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 19:00:24 [clientInboundChannel-2] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=hjpdk3cm
2025-07-16 19:00:24 [http-nio-8080-exec-5] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 19:00:24 [clientOutboundChannel-1] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 19:00:24 [clientOutboundChannel-1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:00:24 [clientInboundChannel-6] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userhjpdk3cm subscriptionId=sub-0 session=hjpdk3cm user=3 payload=byte[0]
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:00:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:00:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:00:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:00:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:00:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:00:25 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:00:25 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 19:00:25 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:00:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:00:25 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 19:00:25 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 19:00:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 19:00:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:00:25 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:00:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:00:27 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:00:27 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 19:00:27 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:00:30 [clientInboundChannel-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userhjpdk3cm subscriptionId=sub-1 session=hjpdk3cm user=3 payload=byte[0]
2025-07-16 19:00:30 [clientInboundChannel-11] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=hjpdk3cm
2025-07-16 19:00:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:00:30 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 19:00:30 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 19:00:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:00:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 19:00:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 19:00:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:00:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:00:32 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 19:00:32 [http-nio-8080-exec-9] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-16 19:00:32 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:00:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:00:32 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 19:00:32 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 19:00:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:00:32 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 19:00:34 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:00:34 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:00:37 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:00:37 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 19:00:37 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:00:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:00:42 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=1&size=20", parameters={masked}
2025-07-16 19:00:42 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 19:00:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:00:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 19:00:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 19:00:42 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:00:42 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 0 containing UNKNO (truncated)...]
2025-07-16 19:00:42 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:00:49 [MessageBroker-3] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannel[pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 11, active threads = 1, queued tasks = 2, completed tasks = 7]
2025-07-16 19:09:32 [RMI TCP Connection(17)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 19:09:32 [RMI TCP Connection(17)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 19:09:32 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 19:09:32 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:09:32 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Closing SockJS session hjpdk3cm with CloseStatus[code=1001, reason=null]
2025-07-16 19:09:32 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - Transport error in WebSocketServerSockJsSession[id=hjpdk3cm]
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:778)
	at org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:575)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:324)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 19:09:32 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Failure while sending SockJS close frame
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 19:09:32 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=hjpdk3cm] closed with CloseStatus[code=1001, reason=null]
2025-07-16 19:09:32 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session hjpdk3cm
2025-07-16 19:09:32 [RMI TCP Connection(17)-127.0.0.1] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 19:09:32 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 19:09:33 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 19:09:33 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:09:33 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:09:33 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:09:33 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:33 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:09:33 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:09:33 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:09:33 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:09:33 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/68/user-offline session=null payload=3
2025-07-16 19:09:34 [clientInboundChannel-14] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=hjpdk3cm
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5403d95]]
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5403d95]
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5403d95]
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 19:09:34 [RMI TCP Connection(17)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 19:09:36 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 49684 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 19:09:36 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 19:09:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 19:09:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112 ms. Found 6 JPA repository interfaces.
2025-07-16 19:09:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 19:09:38 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 19:09:38 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 19:09:38 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 19:09:38 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1575 ms
2025-07-16 19:09:38 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 19:09:38 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 19:09:38 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 19:09:39 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 19:09:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 19:09:40 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@79e2606f
2025-07-16 19:09:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 19:09:40 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 19:09:40 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 19:09:40 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 19:09:41 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 19:09:41 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:09:42 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 19:09:42 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 19:09:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.AuthController:
	
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ChatController:
	{[MESSAGE],[/chat/{conversationId}/send]}: sendMessage(Long,MessageDto)
	{[MESSAGE],[/chat/{conversationId}/read]}: markMessagesAsRead(Long,Long)
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ConversationController:
	
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.FileUploadController:
	
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.MessageController:
	
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.UserController:
	
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-16 19:09:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-16 19:09:43 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:09:43 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:09:43 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-16 19:09:43 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4bb2da93]
2025-07-16 19:09:43 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4bb2da93]
2025-07-16 19:09:43 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4bb2da93]]
2025-07-16 19:09:43 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-16 19:09:43 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:09:43 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:09:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-16 19:09:44 [main] INFO  com.btalk.BackendApplication - Started BackendApplication in 7.623 seconds (process running for 8.214)
2025-07-16 19:09:53 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 19:09:53 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 19:09:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-16 19:09:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-16 19:09:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-16 19:09:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@b50cfa7
2025-07-16 19:09:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5b11b6c8
2025-07-16 19:09:53 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-16 19:09:53 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2025-07-16 19:09:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:09:53 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 19:09:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 19:09:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:09:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:56 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:09:56 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 19:09:56 [http-nio-8080-exec-5] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-16 19:09:56 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:09:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:09:56 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 19:09:56 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 19:09:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:09:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 19:09:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 19:09:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:09:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:56 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=1&size=20", parameters={masked}
2025-07-16 19:09:57 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:09:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:58 [http-nio-8080-exec-8] INFO  c.b.service.impl.MessageServiceImpl - Message size is : 20
2025-07-16 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:58 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:09:58 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 0 containing UNKNO (truncated)...]
2025-07-16 19:09:58 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:58 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:09:58 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 19:09:58 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:09:58 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 19:09:58 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:09:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:10:00 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 19:10:01 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:10:43 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-07-16 19:12:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:12:22 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/info?t=1752669742589", parameters={masked}
2025-07-16 19:12:22 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@c444506
2025-07-16 19:12:22 [http-nio-8080-exec-5] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/info?t=1752669742589
2025-07-16 19:12:22 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:12:22 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/ws/460/th5ckvhv/websocket", parameters={}
2025-07-16 19:12:22 [http-nio-8080-exec-7] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Mapped to org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler@c444506
2025-07-16 19:12:22 [http-nio-8080-exec-7] DEBUG o.s.w.s.s.t.h.DefaultSockJsService - Processing transport request: GET http://localhost:8080/ws/460/th5ckvhv/websocket
2025-07-16 19:12:22 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 19:12:22 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 19:12:22 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 101 SWITCHING_PROTOCOLS
2025-07-16 19:12:22 [http-nio-8080-exec-7] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - New WebSocketServerSockJsSession[id=th5ckvhv]
2025-07-16 19:12:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:12:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 19:12:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:12:22 [http-nio-8080-exec-8] INFO  c.b.s.AuthChannelInterceptorAdapter - WebSocket connected userId=3
2025-07-16 19:12:22 [clientInboundChannel-2] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing CONNECT user=3 session=th5ckvhv
2025-07-16 19:12:22 [http-nio-8080-exec-8] INFO  c.b.websocket.WebSocketEventListener - WebSocket connected: 3
2025-07-16 19:12:22 [clientOutboundChannel-1] INFO  c.b.websocket.WebSocketEventListener - User connected: 3
2025-07-16 19:12:22 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:12:22 [clientOutboundChannel-1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:12:23 [clientInboundChannel-6] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userth5ckvhv subscriptionId=sub-0 session=th5ckvhv user=3 payload=byte[0]
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:12:24 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:12:24 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 19:12:24 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/conversations/user/3", parameters={}
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.ConversationController#getUserConversations(Long)
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:12:24 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:12:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:12:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:12:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:12:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:12:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:12:25 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:12:25 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Conversations retrieved successfully, data=[ConversationDto(conver (truncated)...]
2025-07-16 19:12:25 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:12:35 [clientInboundChannel-9] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE destination=/queue/conversation-updates-userth5ckvhv subscriptionId=sub-1 session=th5ckvhv user=3 payload=byte[0]
2025-07-16 19:12:35 [clientInboundChannel-11] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing SUBSCRIBE /topic/conversation/66/messages id=sub-2 session=th5ckvhv
2025-07-16 19:12:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:12:35 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 19:12:35 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 19:12:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:38 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:12:38 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 19:12:38 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:40 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:12:40 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 19:12:40 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:12:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:12:40 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page?userId=3&page=0&size=20", parameters={masked}
2025-07-16 19:12:40 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getConversationMessagesPaginated(Long, Long, int, int)
2025-07-16 19:12:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:12:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        ?
2025-07-16 19:12:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=?
2025-07-16 19:12:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:12:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=1&size=20", parameters={masked}
2025-07-16 19:12:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:41 [http-nio-8080-exec-1] INFO  c.b.service.impl.MessageServiceImpl - Message size is : 20
2025-07-16 19:12:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:42 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:12:42 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 0 containing UNKNO (truncated)...]
2025-07-16 19:12:42 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:12:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:12:42 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2025-07-16 19:12:42 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 1 of 50 containing com. (truncated)...]
2025-07-16 19:12:42 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:14:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:14:13 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=1&size=20", parameters={masked}
2025-07-16 19:14:13 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 19:14:13 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-16 19:14:13 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 19:14:13 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-07-16 19:14:13 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 19:14:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:14:32 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=1&size=20", parameters={masked}
2025-07-16 19:14:32 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 19:14:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:14:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 19:14:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 19:14:33 [http-nio-8080-exec-6] INFO  c.b.service.impl.MessageServiceImpl - Message size is : 20
2025-07-16 19:14:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-16 19:14:33 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 0 containing UNKNO (truncated)...]
2025-07-16 19:14:33 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 19:16:29 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Closing SockJS session th5ckvhv with CloseStatus[code=1001, reason=null]
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - Transport error in WebSocketServerSockJsSession[id=th5ckvhv]
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsSession.sendCloseMessage(WsSession.java:778)
	at org.apache.tomcat.websocket.WsSession.doClose(WsSession.java:575)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:324)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.w.s.s.t.s.WebSocketServerSockJsSession - Failure while sending SockJS close frame
java.io.IOException: java.nio.channels.ClosedChannelException
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:326)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:266)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlock(WsRemoteEndpointImplBase.java:250)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendPartialString(WsRemoteEndpointImplBase.java:223)
	at org.apache.tomcat.websocket.WsRemoteEndpointBasic.sendText(WsRemoteEndpointBasic.java:48)
	at org.springframework.web.socket.adapter.standard.StandardWebSocketSession.sendTextMessage(StandardWebSocketSession.java:217)
	at org.springframework.web.socket.adapter.AbstractWebSocketSession.sendMessage(AbstractWebSocketSession.java:108)
	at org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession.writeFrameInternal(WebSocketServerSockJsSession.java:228)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.close(AbstractSockJsSession.java:188)
	at org.springframework.web.socket.handler.WebSocketSessionDecorator.close(WebSocketSessionDecorator.java:164)
	at org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.close(ConcurrentWebSocketSessionDecorator.java:271)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:308)
	at org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.stop(SubProtocolWebSocketHandler.java:321)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:463)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:618)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:432)
	at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:323)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1172)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.nio.channels.ClosedChannelException: null
	at org.apache.tomcat.util.net.NioChannel$1.write(NioChannel.java:282)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper$NioOperationState.run(NioEndpoint.java:1665)
	at org.apache.tomcat.util.net.SocketWrapperBase$OperationState.start(SocketWrapperBase.java:987)
	at org.apache.tomcat.util.net.SocketWrapperBase.vectoredOperation(SocketWrapperBase.java:1358)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1287)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:1262)
	at org.apache.tomcat.websocket.server.WsRemoteEndpointImplServer.doWrite(WsRemoteEndpointImplServer.java:171)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.writeMessagePart(WsRemoteEndpointImplBase.java:521)
	at org.apache.tomcat.websocket.WsRemoteEndpointImplBase.sendMessageBlockInternal(WsRemoteEndpointImplBase.java:313)
	... 61 common frames omitted
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.w.s.h.LoggingWebSocketHandlerDecorator - WebSocketServerSockJsSession[id=th5ckvhv] closed with CloseStatus[code=1001, reason=null]
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.w.s.m.SubProtocolWebSocketHandler - Clearing session th5ckvhv
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] INFO  c.b.websocket.WebSocketEventListener - User disconnected: 3
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    update
        users u1_0 
    set
        status=? 
    where
        u1_0.user_id=?
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        c1_0.conversation_id,
        c1_0.created_at,
        c1_0.creator_id,
        c1_0.name,
        c1_0.type 
    from
        conversations c1_0 
    join
        participants p1_0 
            on c1_0.conversation_id=p1_0.conversation_id 
    where
        p1_0.user_id=?
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:16:29 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        a1_0.attachment_id,
        a1_0.file_size_bytes,
        a1_0.file_type,
        a1_0.file_url,
        a1_0.message_id 
    from
        attachments a1_0 
    where
        a1_0.message_id=?
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id,
        p1_0.conversation_id,
        p1_0.joined_at,
        p1_0.left_at,
        p1_0.user_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=?
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
    order by
        m1_0.sent_at desc 
    limit
        1
2025-07-16 19:16:30 [RMI TCP Connection(12)-127.0.0.1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sender_id<>? 
        and not exists(select
            mr1_0.id 
        from
            message_reads mr1_0 
        where
            mr1_0.message_id=m1_0.message_id 
            and mr1_0.user_id=?)
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/66/user-offline session=null payload=3
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/67/user-offline session=null payload=3
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing MESSAGE destination=/topic/conversation/68/user-offline session=null payload=3
2025-07-16 19:16:31 [clientInboundChannel-14] DEBUG o.s.m.s.b.SimpleBrokerMessageHandler - Processing DISCONNECT session=th5ckvhv
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4bb2da93]]
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4bb2da93]
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@4bb2da93]
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 19:16:31 [RMI TCP Connection(12)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 19:16:33 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 29112 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 19:16:33 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 19:16:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 19:16:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 6 JPA repository interfaces.
2025-07-16 19:16:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 19:16:35 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 19:16:35 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 19:16:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 19:16:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1479 ms
2025-07-16 19:16:35 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 19:16:35 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 19:16:35 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 19:16:35 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 19:16:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 19:16:36 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c69e1e1
2025-07-16 19:16:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 19:16:36 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 19:16:36 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 19:16:36 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 19:16:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 19:16:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:16:38 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 19:16:39 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 19:16:40 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.AuthController:
	
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ChatController:
	{[MESSAGE],[/chat/{conversationId}/send]}: sendMessage(Long,MessageDto)
	{[MESSAGE],[/chat/{conversationId}/read]}: markMessagesAsRead(Long,Long)
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ConversationController:
	
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.FileUploadController:
	
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.MessageController:
	
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.UserController:
	
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-16 19:16:40 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-16 19:16:41 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:16:41 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:16:41 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-16 19:16:41 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2aea50a6]
2025-07-16 19:16:41 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2aea50a6]
2025-07-16 19:16:41 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2aea50a6]]
2025-07-16 19:16:41 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-16 19:16:41 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:16:41 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:16:41 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-16 19:16:41 [main] INFO  com.btalk.BackendApplication - Started BackendApplication in 7.989 seconds (process running for 8.624)
2025-07-16 19:16:44 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 19:16:44 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 19:16:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-16 19:16:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-16 19:16:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-16 19:16:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7b054614
2025-07-16 19:16:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1c9b887a
2025-07-16 19:16:44 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-16 19:16:44 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-16 19:16:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:16:45 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=1&size=20", parameters={masked}
2025-07-16 19:16:45 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, String, int, int)
2025-07-16 19:16:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:16:45 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 19:16:45 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-16 19:16:45 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 19:16:45 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: Argument [2025-07-16T01:11:03.000Z] of type [java.lang.String] did not match parameter type [java.time.LocalDateTime (n/a)]]
2025-07-16 19:16:45 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 19:17:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:17:10 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=%272025-07-16T01:11:03.000Z%27&page=1&size=20", parameters={masked}
2025-07-16 19:17:10 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, String, int, int)
2025-07-16 19:17:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:17:11 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 19:17:11 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-16 19:17:11 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 19:17:11 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: Argument ['2025-07-16T01:11:03.000Z'] of type [java.lang.String] did not match parameter type [java.time.LocalDateTime (n/a)]]
2025-07-16 19:17:11 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 19:17:41 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 19:17:55 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2aea50a6]]
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2aea50a6]
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2aea50a6]
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 19:17:55 [RMI TCP Connection(7)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 19:17:58 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 9312 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 19:17:58 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 19:17:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 19:17:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 6 JPA repository interfaces.
2025-07-16 19:17:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 19:17:59 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 19:17:59 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 19:17:59 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 19:17:59 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1538 ms
2025-07-16 19:18:00 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 19:18:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 19:18:00 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 19:18:00 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 19:18:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 19:18:01 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5df7a065
2025-07-16 19:18:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 19:18:01 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 19:18:01 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 19:18:01 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 19:18:02 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 19:18:03 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:18:03 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 19:18:03 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 19:18:04 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-16 19:18:04 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-07-16 19:18:04 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
2025-07-16 19:18:04 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-16 19:18:04 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.AuthController:
	
2025-07-16 19:18:04 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ChatController:
	{[MESSAGE],[/chat/{conversationId}/send]}: sendMessage(Long,MessageDto)
	{[MESSAGE],[/chat/{conversationId}/read]}: markMessagesAsRead(Long,Long)
2025-07-16 19:18:04 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ConversationController:
	
2025-07-16 19:18:04 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.FileUploadController:
	
2025-07-16 19:18:04 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.MessageController:
	
2025-07-16 19:18:04 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.UserController:
	
2025-07-16 19:18:04 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-07-16 19:18:05 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-16 19:18:05 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-16 19:18:05 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:18:05 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:18:05 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-16 19:18:05 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@14aa12c5]
2025-07-16 19:18:05 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@14aa12c5]
2025-07-16 19:18:05 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@14aa12c5]]
2025-07-16 19:18:05 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-16 19:18:05 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:18:05 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:18:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-16 19:18:05 [main] INFO  com.btalk.BackendApplication - Started BackendApplication in 7.902 seconds (process running for 8.617)
2025-07-16 19:18:13 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 19:18:13 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 19:18:13 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-16 19:18:13 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-16 19:18:13 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-16 19:18:13 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1c9b887a
2025-07-16 19:18:13 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@60cc749d
2025-07-16 19:18:13 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-16 19:18:13 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-07-16 19:18:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:18:14 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=1&size=20", parameters={masked}
2025-07-16 19:18:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, LocalDateTime, int, int)
2025-07-16 19:18:14 [http-nio-8080-exec-2] DEBUG o.s.web.method.HandlerMethod - Could not resolve parameter [2] in public com.btalk.dto.response.ApiResponse<org.springframework.data.domain.Page<com.btalk.dto.MessageDto>> com.btalk.controller.MessageController.getMessagesBefore(java.lang.Long,java.lang.Long,java.time.LocalDateTime,int,int): Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T01:11:03.000Z]
2025-07-16 19:18:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.btalk.exceptions.CustomExceptionHandler#handleGeneralException(Exception)
2025-07-16 19:18:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-16 19:18:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ApiResponse(success=false, message=An unexpected error occurred, data=null)]
2025-07-16 19:18:14 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'before': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value [2025-07-16T01:11:03.000Z]]
2025-07-16 19:18:14 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-07-16 19:19:05 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 19:19:38 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@14aa12c5]]
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@14aa12c5]
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@14aa12c5]
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 19:19:38 [RMI TCP Connection(8)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 19:19:40 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 24184 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 19:19:40 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 19:19:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 19:19:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 121 ms. Found 6 JPA repository interfaces.
2025-07-16 19:19:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 19:19:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 19:19:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 19:19:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 19:19:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1643 ms
2025-07-16 19:19:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 19:19:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 19:19:42 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 19:19:43 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 19:19:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 19:19:44 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31f5b923
2025-07-16 19:19:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 19:19:44 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 19:19:44 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 19:19:44 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 19:19:45 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 19:19:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:19:46 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 19:19:46 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 19:19:47 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-16 19:19:47 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-07-16 19:19:47 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
2025-07-16 19:19:47 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-16 19:19:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.AuthController:
	
2025-07-16 19:19:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ChatController:
	{[MESSAGE],[/chat/{conversationId}/read]}: markMessagesAsRead(Long,Long)
	{[MESSAGE],[/chat/{conversationId}/send]}: sendMessage(Long,MessageDto)
2025-07-16 19:19:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ConversationController:
	
2025-07-16 19:19:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.FileUploadController:
	
2025-07-16 19:19:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.MessageController:
	
2025-07-16 19:19:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.UserController:
	
2025-07-16 19:19:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-07-16 19:19:48 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-16 19:19:48 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-16 19:19:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:19:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:19:48 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-16 19:19:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@28c776f2]
2025-07-16 19:19:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@28c776f2]
2025-07-16 19:19:48 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@28c776f2]]
2025-07-16 19:19:48 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-16 19:19:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:19:48 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:19:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-16 19:19:48 [main] INFO  com.btalk.BackendApplication - Started BackendApplication in 8.406 seconds (process running for 8.964)
2025-07-16 19:19:54 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 19:19:54 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 19:19:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-16 19:19:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-16 19:19:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-16 19:19:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@544cd64b
2025-07-16 19:19:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@10c0d39d
2025-07-16 19:19:54 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-16 19:19:54 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-16 19:19:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:19:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=1&size=20", parameters={masked}
2025-07-16 19:19:55 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 19:19:55 [http-nio-8080-exec-2] INFO  c.btalk.controller.MessageController - BOOOO : 2025-07-16T07:41:03
2025-07-16 19:19:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:19:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 19:19:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 19:19:55 [http-nio-8080-exec-2] INFO  c.b.service.impl.MessageServiceImpl - Message size is : 20
2025-07-16 19:19:55 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-16 19:19:55 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 0 containing UNKNO (truncated)...]
2025-07-16 19:19:55 [http-nio-8080-exec-2] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-16 19:19:55 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:20:48 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-07-16 19:21:48 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 19:21:48 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 19:21:49 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@28c776f2]]
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@28c776f2]
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@28c776f2]
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 19:21:49 [RMI TCP Connection(7)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-16 19:21:51 [main] INFO  com.btalk.BackendApplication - Starting BackendApplication using Java 17.0.15 with PID 36720 (C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend\target\classes started by Thaw Htin Aung in C:\Users\Thaw Htin Aung\Desktop\B-Talk\backend)
2025-07-16 19:21:51 [main] INFO  com.btalk.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-16 19:21:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-16 19:21:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 6 JPA repository interfaces.
2025-07-16 19:21:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-16 19:21:52 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-16 19:21:52 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.42]
2025-07-16 19:21:52 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-16 19:21:52 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1653 ms
2025-07-16 19:21:53 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-16 19:21:53 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.18.Final
2025-07-16 19:21:53 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-16 19:21:53 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-16 19:21:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-16 19:21:54 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f45dfec
2025-07-16 19:21:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-16 19:21:54 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-16 19:21:54 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-07-16 19:21:54 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-16 19:21:56 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-16 19:21:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:21:57 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-16 19:21:57 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsService
2025-07-16 19:21:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.s.s.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 20 mappings in 'requestMappingHandlerMapping'
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.AuthController:
	
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ChatController:
	{[MESSAGE],[/chat/{conversationId}/send]}: sendMessage(Long,MessageDto)
	{[MESSAGE],[/chat/{conversationId}/read]}: markMessagesAsRead(Long,Long)
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.ConversationController:
	
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.FileUploadController:
	
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.MessageController:
	
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	c.b.c.UserController:
	
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-16 19:21:58 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-16 19:21:59 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:21:59 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:21:59 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2025-07-16 19:21:59 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12333eaf]
2025-07-16 19:21:59 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12333eaf]
2025-07-16 19:21:59 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12333eaf]]
2025-07-16 19:21:59 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2025-07-16 19:21:59 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:21:59 [main] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:21:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-16 19:21:59 [main] INFO  com.btalk.BackendApplication - Started BackendApplication in 8.301 seconds (process running for 8.918)
2025-07-16 19:22:05 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-16 19:22:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-16 19:22:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-16 19:22:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-16 19:22:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-16 19:22:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1dece75a
2025-07-16 19:22:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@40f2ae53
2025-07-16 19:22:05 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-16 19:22:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-07-16 19:22:05 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:22:06 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=1&size=20", parameters={masked}
2025-07-16 19:22:06 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 19:22:06 [http-nio-8080-exec-1] INFO  c.btalk.controller.MessageController - BOOOO : 2025-07-16T07:41:03
2025-07-16 19:22:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:22:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 19:22:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 19:22:06 [http-nio-8080-exec-1] INFO  c.b.service.impl.MessageServiceImpl - Message size is : 20
2025-07-16 19:22:06 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-16 19:22:06 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 2 of 0 containing UNKNO (truncated)...]
2025-07-16 19:22:06 [http-nio-8080-exec-1] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-16 19:22:06 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:22:59 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-07-16 19:24:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.last_name,
        u1_0.name,
        u1_0.password_hash,
        u1_0.phone_number,
        u1_0.profile_photo_url,
        u1_0.status 
    from
        users u1_0 
    where
        u1_0.phone_number=?
2025-07-16 19:24:44 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/messages/conversation/66/page/before?userId=3&before=2025-07-16T01:11:03.000Z&page=4&size=20", parameters={masked}
2025-07-16 19:24:44 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.btalk.controller.MessageController#getMessagesBefore(Long, Long, Instant, int, int)
2025-07-16 19:24:44 [http-nio-8080-exec-6] INFO  c.btalk.controller.MessageController - BOOOO : 2025-07-16T07:41:03
2025-07-16 19:24:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.participant_id 
    from
        participants p1_0 
    where
        p1_0.conversation_id=? 
        and p1_0.user_id=? 
    limit
        ?
2025-07-16 19:24:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.message_id,
        m1_0.content,
        m1_0.conversation_id,
        m1_0.message_type,
        m1_0.sender_id,
        m1_0.sent_at 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<? 
    order by
        m1_0.sent_at desc 
    limit
        ?, ?
2025-07-16 19:24:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(m1_0.message_id) 
    from
        messages m1_0 
    where
        m1_0.conversation_id=? 
        and m1_0.sent_at<?
2025-07-16 19:24:44 [http-nio-8080-exec-6] INFO  c.b.service.impl.MessageServiceImpl - Message size is : 20
2025-07-16 19:24:44 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-16 19:24:44 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [ApiResponse(success=true, message=Messages retrieved successfully, data=Page 5 of 0 containing UNKNO (truncated)...]
2025-07-16 19:24:44 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-07-16 19:25:42 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12333eaf]]
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12333eaf]
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@12333eaf]
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] DEBUG o.s.m.s.ExecutorSubscribableChannel - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-16 19:25:42 [RMI TCP Connection(9)-127.0.0.1] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
